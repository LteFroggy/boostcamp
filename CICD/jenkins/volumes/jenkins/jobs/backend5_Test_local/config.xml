<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1537.v66038d35fc76">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2255.v56a_15e805f12">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.43.0">
      <projectUrl>https://github.com/LteFroggy/boostcamp/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4117.vc0f3c515a_a_a_0">
    <script>pipeline {
    agent any

    environment {
        PROJECT_DIR = &apos;/var/jenkins_home/workspace/backend5_Test_local/backendProject&apos;   // 백앤드 서버 프로젝트 폴더
        COMPOSE_DIR = &apos;/var/jenkins_home/workspace/backend5_Test_local&apos;  //  프로젝트 루트 폴더에서 docker-compose.yml 실행
        IMAGE_NAME = &apos;backend&apos;
    }

    stages {

          stage(&apos;Cleanup Containers&apos;) {
            steps {
                dir(&quot;${COMPOSE_DIR}&quot;) {
                  sh &apos;docker-compose down&apos;
                }
             }
          }


        stage(&apos;Build&apos;) {
          steps {
            dir(&quot;${PROJECT_DIR}&quot;) {
              sh &apos;chmod +x gradlew&apos;
              sh &apos;./gradlew clean build&apos;
            }
          }
        }

        stage(&apos;Docker Build&apos;) {
          steps {
            dir(&quot;${PROJECT_DIR}&quot;) {
              sh &quot;docker build -t ${IMAGE_NAME} .&quot;
            }
          }
        }

        stage(&apos;Compose Up&apos;) {
          steps {
            dir(&quot;${COMPOSE_DIR}&quot;) {
              sh &apos;pwd&apos;
              sh &apos;ls -l ./nginx/nginx.conf&apos;
              sh &apos;docker-compose up -d --build&apos;
            }
          }
        }

        stage(&apos;Restart Nginx&apos;) {
          steps {
            sh &apos;docker restart nginx || true&apos;
          }
        }

      }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>